import urllib.request
import urllib.error
import urllib.parse
import http.client
import http.cookiejar
import os
import sys
from bs4 import BeautifulSoup
from colorama import Fore, Style


class Exploit(object):
	@staticmethod
	def exploitfound(name, version, exploiturl):
		print(Fore.GREEN + name + " " + version + " is vulnerable with exploit: \r\n" + exploiturl + '\r\n' + Style.RESET_ALL)

	@staticmethod
	def exploitnotfound(name, version):
		print(Fore.RED + name + " " + version + " is not vulnerable" + '\r\n' + Style.RESET_ALL)

	@staticmethod
	def request(hostname, data='', urlencode=False, headers={}, method='GET', encode='utf-8', decode='iso-8859-1'):
		try:
			if urlencode:
				data = urllib.parse.urlencode(data)
			request = urllib.request.Request(hostname, data=data.encode(encode, 'ignore'), headers=headers, method=method)
			response = urllib.request.urlopen(request)

			return response.read().decode(decode, 'ignore')

		except http.client.BadStatusLine:
				pass
		except urllib.request.HTTPError:
				pass
		except urllib.request.URLError:
				pass

	@staticmethod
	def login(hostname, username, password):
		# Attempt Login
		cj = http.cookiejar.CookieJar()
		opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj))
		url = hostname + '/wp-login.php'
		data = {'log': username, 'pwd': password, 'submit': 'Log In'}
		data = urllib.parse.urlencode(data)
		opener.open(url, data.encode('utf-8'))

		# Verify successful login
		response = opener.open(hostname)
		soup = BeautifulSoup(response)
		atags = soup.find_all('a')
		if atags:
			for atag in atags:
				hrefs = atag.get('href')
				if hostname + '/wp-login.php?action=logout' in hrefs:
					return True

	@staticmethod
	def checkfile(file):
		if not os.path.isfile(file) and not os.access(file, os.R_OK):
			print('[X] ' + file + ' file is missing or not readable')
			sys.exit(1)
		else:
			return file
